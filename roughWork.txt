   
   
   
   
   
   
   
   
   
   
      const [open, setOpen] = useState<boolean>(false);
    const [imagePreview, setImagePreview] = useState<string | null>(null);
    const [formData, setFormData] = useState({
        title: '',
        image: null as any,
        description: '',
    });
   
   
   
   
   
   
   
   
   
   
   
    const handleOpenModal = () => {
        setOpen(true);
    };

    const handleCloseModal = () => {
        setOpen(false);
    };

    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        if (e.target.files && e.target.files[0]) {
            const file = e.target.files[0];
            setFormData({ ...formData, image: file });

            const reader = new FileReader();
            reader.onloadend = () => {
                setImagePreview(reader.result as string);
            };
            reader.readAsDataURL(file);
        }
    };

    const handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
    };

    const handleFormSubmit = () => {
        console.log(formData); 
        handleCloseModal(); 
    };












     <div>
                    <Button
                        startIcon={<PlusIcon fontSize="var(--icon-fontSize-md)" />}
                        variant="contained"
                        onClick={handleOpenModal} 
                    >
                        Add
                    </Button>
                </div>



























                  <Dialog open={open} onClose={handleCloseModal}>
                <DialogTitle>Add Invoice</DialogTitle>
                <DialogContent>
                    <TextField
                        name="title"
                        label="Title"
                        variant="outlined"
                        fullWidth
                        margin="normal"
                        value={formData.title}
                        onChange={handleFormChange}
                    />
                    <div style={{ marginBottom: '16px' }}>
                        <input
                            type="file"
                            accept="image/*"
                            onChange={handleFileChange}
                            id="image-upload"
                            style={{ display: 'none' }}
                        />
                        <label htmlFor="image-upload">
                            <Button
                                component="span"
                                startIcon={<CloudUploadIcon />}
                                variant="outlined"
                                fullWidth
                                sx={{ textAlign: 'center' }}
                            >
                                {formData.image ? 'Image Selected' : 'Select Image'}
                            </Button>
                        </label>
                        {imagePreview && <img src={imagePreview} alt="Preview" style={{ width: '100%', marginTop: '16px' }} />}
                    </div>
                    <TextField
                        name="description"
                        label="Description"
                        variant="outlined"
                        fullWidth
                        margin="normal"
                        multiline
                        rows={4}
                        value={formData.description}
                        onChange={handleFormChange}
                    />
                </DialogContent>
                <DialogActions>
                    <Button onClick={handleCloseModal} color="secondary">
                        Cancel
                    </Button>
                    <Button onClick={handleFormSubmit} variant="contained" color="primary">
                        Submit
                    </Button>
                </DialogActions>
            </Dialog>